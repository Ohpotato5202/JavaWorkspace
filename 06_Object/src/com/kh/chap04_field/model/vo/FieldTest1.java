package com.kh.chap04_field.model.vo;

public class FieldTest1 {
	/*
	 *  변수구분
	 *  - 전역변수 : 클래스 영역에 바로 선언하는 변수 => 클래스 내에서하면 어디서든 사용 가능
	 *  - 지역변수 : 클래스 영역내에서 특정 구역 ({})에서만 사용가능한 변수 (선언한 지역에서만 사용가능)
	 *             메소드, if, for 등등
	 * 
	 *  1. 전역변수(두 가지로 구분)
	 *  1) 필드 == 인스턴트 변수 == 멤버변수
	 *     생성시점 : new 연산자를 통해 객체가 생성되는 순간 메모리 영역에 할당됨.
	 *     소멸시점 : 객체가 소멸할때 함께 소멸
	 *    
	 *  2) 클래스 변수 == static 변수 : static 예약어를 붙이느냐 안 붙이흐냐에 따라
	 *                              static변수냐, 필드냐로 구분이됨.
	 *     생성시점 : 프로그램 실행과 동시(객체생성이 안되더라도)에 메모리영역(static) 할당됨
	 *     소멸시점 : 프로그램 종료 될떄 소멸.
	 * 
	 *  2. 지역변수
	 *     생성시점 : 특정구역({})이 실행될때 메모리영역(stack)에 할당 ex) 메소드 종료시
	 *     소멸시점 : 특정구역({})이 종료될때 소멸 ex) 메소드 실행시
	 * */

	private int global;
	
	public void test(int num) {
		// 매개변수 == 지역변수
		
		// 지역변수는(메소드 영역내에서 생성한 변수) => 지역변수에는 접근제한자가 없음
		// 지역변수는 값을 항상 초기화 해줘야함.
		int local = 0;
		
		if(true) {
			int a = 0;
		}
		// 중괄호 지역을 벗어나서 변수 소멸
		//System.out.println(a);
		
		System.out.println(local); // 초기화 시켜줘야 출력가능
		
		// 필드초기화는 jvm이 객체 생성시 heap메모리 공간에
		// 값을 할당할때 자동으로 초기화 시켜주기 때문에 문제없다.
		System.out.println(global);
		
		System.out.println(num); // 매개변수
		// 매소드 호출시 반드시 값을 넘겨줘야 실행이
		// 가능하지 때문에 (즉 항상 값이 들어가 있음)
		
	}
	
	
	
	
	
	
}
